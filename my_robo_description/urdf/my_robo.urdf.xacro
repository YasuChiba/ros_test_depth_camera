<?xml version="1.0"?>
<robot name="my_robo"
  xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.14159274"/>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <xacro:macro name="box_inertial" params="mass height width depth">
    <mass value="${mass}"/>
    <inertia ixx="${(mass*(width*width+depth*depth))/12}" ixy="0" ixz="0"
			 iyy="${(mass*(height*height+depth*depth))/12}" iyz="0"
			 izz="${(mass*(height*height+width*width))/12}" />
  </xacro:macro>
  <!---->
  <!---->
  <!---->
  <!---->
  <!---->
  <link name="world"/>
  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link"/>
  <link name="d435_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01" />
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <xacro:box_inertial mass="1.0"
						   height="0.01" width="0.01" depth="0.01"/>
    </inertial>
  </link>
  <joint name="base_link_to_d435_link_joint" type="fixed">
    <origin xyz="0 0 1.0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="d435_link" />
  </joint>
  <link name="d435_link_optical"/>
  <joint name="d435_link_to_d435_link_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera
        image won't be aligned properly with the frame it is supposedly
        originating from -->
    <!--https://answers.ros.org/question/232534/gazebo-camera-frame-is-inconsistent-with-rviz-opencv-convention/?answer=232562#post-id-232562-->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="d435_link"/>
    <child link="d435_link_optical"/>
  </joint>
  <!--  gazebo-->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>my_robo</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="d435_link">
    <sensor type="depth" name="d435">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>${85.2 * M_PI/180.0}</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>30</far>
        </clip>
      </camera>
      <plugin name="d435_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <imageTopicName>d435/image_raw</imageTopicName>
        <cameraInfoTopicName>d435/camera_info</cameraInfoTopicName>
        <depthImageTopicName>d435/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>d435/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>d435/depth/points</pointCloudTopicName>
        <frameName>d435_link_optical</frameName>
        <pointCloudCutoff>0.01</pointCloudCutoff>
        <pointCloudCutoffMax>15.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
</robot>
